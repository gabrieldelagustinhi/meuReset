Esse é o primeiro arquivo que foi subido para o GitHub, como teste.

Se este lendo isso no GitHub, é por funcionou :)

    Abrir o code dentro da paste pelo terminal  - code .

Comando uteis para o GitHub (git já instalado, utilizando o terminal bash)
    git init                                    //cria um novo repositorio na pasta
    git status                                  //lista o que está no projeto              
    git add ...                                 //adiciona o arquivo (substirui o ... pelo nome do arquivo) ao seu repositório local e o prepara para confirmação.
    git add .                                   //faz igual ao git add mas adiciona todos os itens do repositório local
    git reset                                   //cancela o prepado de um arquivo, 
    git commit -m "comentários sobre versão"    //confirmas as alterações e prepara o arquivo para ser enviado para o repositório
    git remote add origin ...                   //adiciona o repositorio criado (endereço nos 3 pontinhos, no meu caso foi gabrieldelagustinhi/meuReset.git)
    git branch -M main                          //renomea a branch para main
    git push -u origin main                     //envia os documentos para o o git

Comandos uteis para o cypress (utilizando o temrinal shell)
    npm init -y                                 //usado para configurar um novo pacote npm ou existente             
    npm install cypress                         //intala o cypress
    npx cypress open                            //inicia o cypress - Depois de intalados, só usa esse

Comandos para usar BDD no cypress
    npm install @badeball/cypress-cucumber-preprocessor
    npm i -D cypress @bahmutov/cypress-esbuild-preprocessor esbuild

Comandos para instalar o faker
    npm install @faker-js/faker --save-dev
     declara no código import { faker } from '@faker-js/faker'

Comandos para adicionar o JOI
    npm i joi --save-dev
     declara no código const joi = require('joi')

Comandos para instalar o allure report
    npm i allure-commandline --save-dev

Comandos para instalar o plugin allure no cypress
    npm i @shelex/cypress-allure-plugin --save-dev
 depois no cypress.config.js tem que colocar o seguinte
    const allureWriter = require('@shelex/cypress-allure-plugin/writer'); // na parte superior
    allureWriter(on, config);
    return config;           // esses dois comandos dentro de setupNodeEvents(on, config){}
 dentro de cypress/support/e2e.js colocar o seguinte
    import '@shelex/cypress-allure-plugin'

Comando para rodar o cypress com o allure já completo
    npm i npm-run-all --save-dev

Comando para gerar o mochawesome
    npm install --save-dev mochawesome mochawesome-merge mochawesome-report-generator

Dicas de CSS
    Tag ->       $$('tag')                      exemplos: <a> <p> <li> <div> <...>
    Classe ->    $$('.classe')                  OBS: Mais de uma classe juntas $$('.classe.classe')
                                                Classes separadas $$('.classe .classe')
    ID ->        $$('#id')
    Atributos -> $$('[atributos="valor"')
    All ->       $$('*')                        OBS: Retorna tudo
    exemplo      $$('a[#txt]')                  Dentro da tag 'a' o id 'txt' 
                 $$('a[abc="texto"]')           Dentro da tag 'a' o atributo 'abc' com valor 'texto'